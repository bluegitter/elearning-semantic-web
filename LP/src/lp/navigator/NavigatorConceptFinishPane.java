/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NavigatorConceptFinishPane.java
 *
 * Created on 2011-3-5, 15:29:46
 */
package lp.navigator;

import exception.jena.IndividualExistException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;
import lp.LPApp;
import ontology.EConcept;
import ontology.EInterest;
import ontology.EPerformance;
import ontology.people.ELearner;

/**
 *
 * @author ghh
 */
public class NavigatorConceptFinishPane extends javax.swing.JPanel {

    public ArrayList<EPerformance> performanceNodes = new ArrayList<EPerformance>();
    private NavigatorDialog parent;

    /** Creates new form NavigatorConceptFinishPane */
    public NavigatorConceptFinishPane(ArrayList<EPerformance> selectedNodes, NavigatorDialog parent) {
        this.parent = parent;
        parent.setTitle("初始化向导：确认正在学习的知识点");
        this.performanceNodes = selectedNodes;
        initComponents();

        DefaultTableModel model;
        model = (DefaultTableModel) jTable1.getModel();

        for (int index = model.getRowCount() - 1; index >= 0; index--) {
            model.removeRow(index);
        }

        for (int i = 0; i < performanceNodes.size(); i++) {
            EPerformance temp = performanceNodes.get(i);
            String cid = temp.getEConcept().getCid();
            EConcept ec = LPApp.lpModel.getEConcept(cid);
            //String interestId = this.interestNodes.get(i).getId();
            String cname = ec.getName();
            //  float value = temp.getValue();
            //  Object[] oa = {cid,cname,value};
            Object[] oa = {cname};
            model.addRow(oa);
        }
        jTable1.updateUI();
    }

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {
        parent.nodesP = performanceNodes;
        // parent.setNext();
        parent.setTitle("用户使用向导");

        //将感兴趣的知识点和学习中的知识点写入model
        for (int i = 0; i < parent.nodes.size(); i++) {
            EInterest ei = parent.nodes.get(i);
            if (!LPApp.lpModel.containEInterest(ei.getId())) {
                LPApp.lpModel.addEInterest(ei);
            }
        }

        for (int i = 0; i < parent.nodesP.size(); i++) {
            EPerformance ep = parent.nodesP.get(i);
            if (!LPApp.lpModel.containEPerformance(ep.getId())) {
                try {
                    LPApp.lpModel.addEPerfomance(ep);
                } catch (IndividualExistException ex) {
                    Logger.getLogger(NavigatorConceptFinishPane.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        System.out.println("用户完成设定兴趣点");
        parent.setVisible(false);
        parent.dispose();
    }

    private void ignorButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        parent.setVisible(false);
        parent.dispose();
    }

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {
        parent.setPrevious();

        performanceNodes = new ArrayList<EPerformance>();
        DefaultTableModel model;
        model = (DefaultTableModel) jTable1.getModel();
        for (int index = model.getRowCount() - 1; index >= 0; index--) {
            model.removeRow(index);
        }
        jTable1.updateUI();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jLabel1.setText("您添加了学习中的知识点：");
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        JButton nextButton = new JButton();
        nextButton.setBounds(507, 435,120,33); 
        nextButton.setText("完成");
        this.add(nextButton);
        nextButton.grabFocus();
        nextButton.setVisible(true);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        JButton ignorButton = new JButton();
        ignorButton.setBounds(10, 435,120,33); 
        ignorButton.setText("跳过向导");
        this.add(ignorButton);
        ignorButton.setVisible(true);
        ignorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ignorButtonActionPerformed(evt);
            }
        });

        JButton previousButton = new JButton();
        previousButton.setBounds(377, 435,120,33); 
        previousButton.setText("上一步");
        this.add(previousButton);
        previousButton.setVisible(true);
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "知识点"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
